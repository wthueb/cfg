" vi sucks
set nocompatible

filetype off

so ~/.vim/plugins.vim

filetype plugin indent on

set encoding=utf-8

syntax on

if &term =~ '256color'
    set t_ut=
endif

" i'll be honest i'm not really sure what this is doing but it works in tmux
if has('termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

    set termguicolors
endif

" enable italics
let &t_ZH = "\e[3m"
let &t_ZR = "\e[23m"

" use string highlighting in comments: "like this"
let c_comment_strings = 1

"let g:dracula_colorterm = 0

colorscheme dracula

if has('gui_running')
    if has('gui_gtk2')
        set guifont=Inconsolata\ 11
    elseif has('gui_macvim')
        set guifont=SF\ Mono\ Powerline:h11
    elseif has('gui_win32')
        set guifont=SF\ Mono\ Powerline:h11:cANSI:qCLEARTYPE
    endif
endif

set colorcolumn=100
highlight ColorColumn ctermbg=darkgray

" flash screen instead of making noise
set visualbell

" show line numbers
set number

" have 5 lines above/below the cursor at all times if possible
set scrolloff=5

" disable text wrapping
set nowrap

" show @@@ in the last columns if the last line continues off screen
" only really applicable if 'wrap' is set
set display=lastline

" backspace will delete newlines and indents ~normally~
set backspace=indent,eol,start

" time out on mappings and key codes
set timeout
set ttimeout
set ttimeoutlen=30 " 30 ms

" always show status line
set laststatus=2

python3 from powerline.vim import setup as powerline_setup
python3 powerline_setup()
python3 del powerline_setup

" don't show mode on the last line when in insert/visual mode
" since we have powerline to tell us
set noshowmode

" hide buffers when abandoned
set hidden

if has('reltime')
    " incremental search, update in real time
    set incsearch
endif

" highlight all occurances of a search
set hlsearch

" keep 200 lines of command history
set history=200

" display ongoing sequences on the last line
set showcmd

" better command completion
set wildmenu

" save and load view for each buffer (for persistent cursor position, mostly)
autocmd BufWinEnter *.* silent loadview
autocmd BufWinLeave *.* mkview

set completeopt="menuone,preview"

" 4 spaces for tabs
set tabstop=4 shiftwidth=0 softtabstop=4 expandtab

" show tabs as characters
set list
set listchars=tab:>·,trail:·

" make and asm are archaic and insist on tab characters instead of spaces
autocmd FileType make setlocal tabstop=4 shiftwidth=0 softtabstop=0 noexpandtab
autocmd FileType asm setlocal tabstop=4 shiftwidth=0 softtabstop=0 noexpandtab syntax=nasm

" disable colorcolumn and enable wrapping for tex files
autocmd FileType tex setlocal colorcolumn= wrap

" enable spellcheck in markdown files
autocmd FileType markdown setlocal spell spelllang=en_us

let mapleader = ','
let maplocalleader = '='


" flake8

let g:flake8_show_in_file = 1
autocmd FileType python nnoremap <leader>p :call flake8#Flake8()<CR>


" nerdtree
command NT NERDTree


" vim-json

" show quotes
let g:vim_json_syntax_conceal = 0


" youcompleteme

nnoremap <C-d> :YcmCompleter GoTo<CR>

let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_global_ycm_extra_conf = '~/.vim/ycm_extra_conf.py'
let g:ycm_filetype_blacklist = { 'vimshell': 1 }

if !exists("g:ycm_semantic_triggers")
  let g:ycm_semantic_triggers = {}
endif

let g:ycm_semantic_triggers['typescript'] = ['.']


" kite

let g:kite_auto_complete = 1
let g:kite_tab_complete = 1
let g:kite_snippets = 1


" non-plugin key mappings

nnoremap ; :
vnoremap ; :

inoremap kj <Esc>
cnoremap kj <C-c>

nnoremap S :%s/

nnoremap <leader><leader> :w<CR>:sus<CR>
nnoremap \\ :wq<CR>

" get rid of highlighting
nnoremap <leader>c :nohl<CR>

" switching between panes
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
nnoremap <C-h> <C-w><C-h>

" buffers
nnoremap <leader>l :ls<CR>
nnoremap <leader>b :bp<CR>
nnoremap <leader>f :bn<CR>
nnoremap <leader>g :e#<CR>
nnoremap <leader>1 :1b<CR>
nnoremap <leader>2 :2b<CR>
nnoremap <leader>3 :3b<CR>
nnoremap <leader>4 :4b<CR>
nnoremap <leader>5 :5b<CR>
nnoremap <leader>6 :6b<CR>
nnoremap <leader>7 :7b<CR>
nnoremap <leader>8 :8b<CR>
nnoremap <leader>9 :9b<CR>
nnoremap <leader>0 :10b<CR>
