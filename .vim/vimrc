set encoding=utf-8

" have to do this now so mappings work
let mapleader = ','
let maplocalleader = '='

" install plugins with vim-plug
filetype off
so ~/.vim/plugins.vim
filetype plugin indent on

syntax on

" set font if in a gui
if has('gui_running')
    if has('gui_gtk2')
        set guifont=Inconsolata\ 11
    elseif has('gui_macvim')
        set guifont=SF\ Mono\ Powerline:h11
    elseif has('gui_win32')
        set guifont=SF\ Mono\ Powerline:h11:cANSI:qCLEARTYPE
    endif

    set lines=50 columns=105
endif

" save and load view for each buffer (for persistent cursor position, folds, etc)
autocmd BufWinEnter *.* silent loadview
autocmd BufWinLeave *.* mkview

" keep undo history
if has('persistent_undo')
    if empty(glob('~/.vim/backups'))
        silent !mkdir ~/.vim/backups &> /dev/null
    endif

    set undodir=~/.vim/backups
    set undofile
endif

" make swap files less annoying, use :recover to actually recover
set shortmess+=A

" custom key bindings
so ~/.vim/bindings.vim

" {{{ coc stuff
call coc#config('coc.preferences', {
            \ 'extensionUpdateCheck': 'daily',
            \})
call coc#config('python.linting', {
            \ 'enabled': v:true,
            \ 'pylintEnabled': v:false,
            \ 'flake8Enabled': v:true,
            \ 'flake8Args': ['--max-line-length=88', '--exclude=.git,__pycache__,env,build,dist'],
            \})
call coc#config('python.formatting', {
            \ 'provider': 'black',
            \ 'blackArgs': ['--experimental-string-processing'],
            \})
call coc#config('clangd.arguments', [
            \ '-fallback-style=Microsoft'
            \])
" }}}

" {{{ colorscheme stuff (dracula)
if has('termguicolors')
    set termguicolors
endif

" enable italics
let &t_ZH = "\e[3m"
let &t_ZR = "\e[23m"

" use string highlighting in comments: "like this"
let c_comment_strings = 1

" colorscheme dracula
colorscheme nord
" }}}

" {{{ settings

" flash screen instead of making noise
set visualbell

" show hybrid line numbers
set number

augroup numbertoggle
    autocmd!
    autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != 'i' | set rnu | endif
    autocmd BufLeave,FocusLost,InsertEnter,WinLeave * if &nu | set nornu | endif
augroup END

" need cursor line for colored current line number
set cursorline
hi! CursorLine cterm=NONE ctermfg=NONE ctermbg=NONE guifg=NONE guibg=NONE

" have 5 lines above/below the cursor at all times if possible
set scrolloff=5
set sidescrolloff=5
set sidescroll=1

" disable text wrapping
set nowrap

" show @@@ in the last columns if the last line continues off screen
" only really applicable if 'wrap' is set
set display=lastline

set spelllang=en_us

" backspace will delete newlines and indents ~normally~
set backspace=indent,eol,start

" time out on mappings and key codes (in milliseconds)
set timeout ttimeout ttimeoutlen=30

" how quickly swp file is written after stopping typing in ms
set updatetime=100

" put diagnositic symbol in number column
set signcolumn=number

" always show status line
set laststatus=2

" don't show mode on the last line when in insert/visual mode
set noshowmode

" hide buffers when abandoned
set hidden

" incremental search, update in real time
if has('reltime')
    set incsearch
endif

" highlight all occurances of a search
set hlsearch

" only care about case when containing capital letters or \c or \C
set ignorecase
set smartcase

" keep 1000 lines of command history
set history=1000

" display ongoing sequences on the last line
set showcmd

" better command completion
set wildmenu
set wildmode=list:longest,full
set wildignore=*.o,*.obj,*~

" 4 spaces for tabs by default. sw=0 sts=0 means it uses tabstop value
set tabstop=4 shiftwidth=0 softtabstop=-0 expandtab

set autoindent

if has('smartindent')
    set smartindent
endif

" show tabs as characters
set list
set listchars=tab:>·,trail:·,nbsp:·

" highlight column to suggest making a new line
autocmd FileType python setlocal colorcolumn=88

set colorcolumn=100
hi ColorColumn ctermbg=darkgray

" fold manually
set foldmethod=marker
" folds disabled by default, toggle with zi
set nofoldenable

hi! link Folded DraculaOrange

autocmd Syntax * hi! link FoldMarker DraculaOrange
autocmd Syntax * call matchadd('FoldMarker', '{{{\|}}}')

" }}}

" {{{ filetype specific settings

" make and asm are archaic and insist on tab characters instead of spaces
autocmd FileType make setlocal tabstop=4 shiftwidth=0 softtabstop=0 noexpandtab
autocmd FileType asm setlocal tabstop=4 shiftwidth=0 softtabstop=0 noexpandtab syntax=nasm

autocmd FileType css setlocal tabstop=2 shiftwidth=0 softtabstop=0 expandtab
autocmd FileType html setlocal tabstop=2 shiftwidth=0 softtabstop=0 expandtab
autocmd FileType javascript setlocal tabstop=2 shiftwidth=0 softtabstop=0 expandtab

" disable colorcolumn and enable wrapping for tex files
autocmd FileType tex setlocal colorcolumn= wrap spell

" enable spellcheck in markdown files
autocmd FileType markdown setlocal spell

" enable spellcheck in git commit messages
autocmd FileType gitcommit setlocal spell

" }}}
